openapi: 3.0.0
info:
  title: Building API
  description: Supports Buildings
  version: 0.0.1
components:
#  responses:
#    UnauthorizedError:
#      description: API key is missing or invalid
#      headers:
#        WWW_Authenticate:
#          schema:
#            type: string
#  securitySchemes:
#      Lambdaauthorizer:
#        type: apiKey
#        in: header
#        name: Authorization
#        x-amazon-apigateway-authtype: cognito_user_pools
#        x-amazon-apigateway-authorizer: # An API Gateway Lambda authorizer definition
#          type: cognito_user_pools # Required property and the value must "token"
#          providerARNs:
#          - ${replace_with_cognito_use_pool_ARN}
  schemas:
    building:
      type: object
      properties:
        building_id:
          type: string
          example: 'BD-1'
        building_name:
          type: string
          example: 'Schönhauser Allee 175'
        building_street:
          type: string
          example: 'Schönhauser Allee'
        building_street_number:
          type: integer
          format: int64
          example: 175
        building_zip_code:
          type: integer
          format: int64
          example: 10119
        building_place:
          type: string
          example: 'Berlin'
        heating_area_total:
          type: integer
          format: int64
          description: 'm^2'
          example: 2407
        building_category:
          type: string
          example: 'Mehrfamilienhaus'
        building_year:
          type: integer
          format: int64
          example: 2019
        number_of_entrances:
          type: integer
          format: int64
          example: 1
        number_of_floors:
          type: integer
          format: int64
          example: 2
        number_of_apartments:
          type: integer
          format: int64
          example: 0
        building_comment:
          type: string
          example: "this is a comment"
    pod:
      type: object
      properties:
        pod_id:
          type: string
          example: POD-1
        pod_address_street:
          type: string
          example: 'Schönhauser Allee'
        pod_address_additional_attribute:
          type: string
        pod_address_street_number:
          type: integer
          format: int64
          example: 175
        pod_place:
          type: string
          example: 'Berlin'
        pod_comment:
          type: string
#security:
  #- Lambdaauthorizer: []
paths:
  /{buildingID}:
    get:
      summary: returns a particular building
      parameters: 
        - name: buildingID
          in: path
          required: true
          description: The ID of the particular Building
          schema:
            type : string
      x-amazon-apigateway-integration:
        type: AWS
        uri: arn:aws:apigateway:us-east-2:dynamodb:action/GetItem
        credentials: arn:aws:iam::868675989909:role/APIGatewayDynamoDBRole
        httpMethod: POST
        requestParameters:
          integration.request.path.buildingID: method.request.path.buildingID
        requestTemplates:
          application/json:
            "{
              \"TableName\": \"EnergecosTable\",
              \"Key\": {
                  \"pk_id\": {
                      \"S\": \"$input.params('buildingID')\"
                  }
                }
              }"
        responses:
          200:
            "#set($inputRoot = $input.path('$'))
            {
              \"building_id\": \"$inputRoot.Item.pk_id.S\",
              \"building_name\": \"$inputRoot.Item.building_name.S\",
              \"building_street\": \"$inputRoot.Item.building_street.S\",
              \"building_street_number\": \"$inputRoot.Item.building_street.S\",
              \"building_zip_code\": \"$inputRoot.Item.building_zip_code.S\",
              \"building_place\": \"$inputRoot.Item.building_place.S\",
              \"heating_area_total\": \"$inputRoot.Item.heating_area_total.S\",
              \"building_category\": \"$inputRoot.Item.building_category.S\",
              \"building_year\": \"$inputRoot.Item.building_year.S\",
              \"number_of_entrances\": \"$inputRoot.Item.number_of_entrances.S\",
              \"number_of_floors\": \"$inputRoot.Item.number_of_floors.S\",
              \"number_of_apartments\": \"$inputRoot.Item.number_of_apartments.S\",
              \"building_comment\": \"$inputRoot.Item.building_comment.S\",
            }"
          default:
            statusCode: 404
            responseTemplates:
              application/json:
                "{\"message\": \"Building Not Found\"}"
      responses:
       # '401':
        #  $ref: "#/components/responses/UnauthorizedError"
        '200':
          description: JSON body of Building
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/building'
    put:
      summary: Update a Building
      parameters:
        - name: buildingID
          in: path
          required: true
          description: The ID of the particular Building
          schema:
            type: string
      x-amazon-apigateway-integration:
        type: AWS
        uri: arn:aws:apigateway:us-east-2:dynamodb:action/PutItem
        credentials: arn:aws:iam::868675989909:role/APIGatewayDynamoDBRole
        httpMethod: POST
        requestParameters:
          integration.request.path.buildingID: method.request.path.buildingID
        requestTemplates:
          application/json:
            "{
               \"TableName\": \"EnergecosTable\",
               \"Item\": {
                   \"pk_id\": {
                       \"S\": \"$input.params('buildingID')\"
                   },
                   \"building_name\": {
                     \"S\" : \"$input.path('$.building_name')\"
                     },
                   \"building_street\": {
                    \"S\" : \"$input.path('$.building_street')\"
                   },
                   \"building_street_number\": {
                     \"S\" : \"$input.path('$.building_street_number')\"
                    },
                   \"building_zip_code\": {
                     \"S\" : \"$input.path('$.building_zip_code')\"
                    },
                   \"building_place\": {
                    \"S\" : \"$input.path('$.building_place')\"
                   },
                   \"heating_area_total\": {
                     \"S\" : \"$input.path('$.heating_area_total')\"
                    },
                   \"building_category\": {
                     \"S\" : \"$input.path('$.building_category')\"
                    },
                   \"building_year\": {
                     \"S\" : \"$input.path('$.building_year')\"
                    },
                   \"number_of_entrances\": {
                     \"S\" : \"$input.path('$.number_of_entrances')\"
                    },
                   \"number_of_floors\": {
                    \"S\" : \"$input.path('$.number_of_floors')\"
                   },
                   \"number_of_apartments\": {
                     \"S\" : \"$input.path('$.number_of_apartments')\"
                    },
                   \"building_comment\": {
                    \"S\" : \"$input.path('$.building_comment')\"
                   },
                 }
             }"
        responses:
          default:
            statusCode: 204
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/building'
      responses:
        '204':
          description: Building Updated
          content:
            application/json:
              schema:
                {}
  /{buildingID}/pod:

  /:
    post:
      summary: "Creates a New Building"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/building'
      responses:
#        '401':
#          $ref: "#/components/responses/UnauthorizedError"
        '201':
          description: Created
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/building'
      x-amazon-apigateway-integration:
        type: AWS
        uri: arn:aws:apigateway:us-east-2:dynamodb:action/PutItem
        credentials: arn:aws:iam::868675989909:role/APIGatewayDynamoDBRole
        httpMethod: POST
        requestTemplates:
          application/json:
            "{
                     \"TableName\": \"EnergecosTable\",
                     \"Item\": {
                         \"pk_id\": {
                             \"S\": \"$input.path('$.buildingID')\"
                         },
                         \"building_name\": {
                           \"S\" : \"$input.path('$.building_name')\"
                           },
                         \"building_street\": {
                          \"S\" : \"$input.path('$.building_street')\"
                         },
                         \"building_street_number\": {
                           \"S\" : \"$input.path('$.building_street_number')\"
                          },
                         \"building_zip_code\": {
                           \"S\" : \"$input.path('$.building_zip_code')\"
                          },
                         \"building_place\": {
                          \"S\" : \"$input.path('$.building_place')\"
                         },
                         \"heating_area_total\": {
                           \"S\" : \"$input.path('$.heating_area_total')\"
                          },
                         \"building_category\": {
                           \"S\" : \"$input.path('$.building_category')\"
                          },
                         \"building_year\": {
                           \"S\" : \"$input.path('$.building_year')\"
                          },
                         \"number_of_entrances\": {
                           \"S\" : \"$input.path('$.number_of_entrances')\"
                          },
                         \"number_of_floors\": {
                          \"S\" : \"$input.path('$.number_of_floors')\"
                         },
                         \"number_of_apartments\": {
                           \"S\" : \"$input.path('$.number_of_apartments')\"
                          },
                         \"building_comment\": {
                          \"S\" : \"$input.path('$.building_comment')\"
                         },
                       }
                   }"
        responses:
          default:
            statusCode: 201